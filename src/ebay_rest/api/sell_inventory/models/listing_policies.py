# coding: utf-8

"""
    Inventory API

    The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.  # noqa: E501

    OpenAPI spec version: 1.18.4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ListingPolicies(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'best_offer_terms': 'BestOffer',
        'e_bay_plus_if_eligible': 'bool',
        'fulfillment_policy_id': 'str',
        'payment_policy_id': 'str',
        'product_compliance_policy_ids': 'list[str]',
        'regional_product_compliance_policies': 'RegionalProductCompliancePolicies',
        'regional_take_back_policies': 'RegionalTakeBackPolicies',
        'return_policy_id': 'str',
        'shipping_cost_overrides': 'list[ShippingCostOverride]',
        'take_back_policy_id': 'str'
    }

    attribute_map = {
        'best_offer_terms': 'bestOfferTerms',
        'e_bay_plus_if_eligible': 'eBayPlusIfEligible',
        'fulfillment_policy_id': 'fulfillmentPolicyId',
        'payment_policy_id': 'paymentPolicyId',
        'product_compliance_policy_ids': 'productCompliancePolicyIds',
        'regional_product_compliance_policies': 'regionalProductCompliancePolicies',
        'regional_take_back_policies': 'regionalTakeBackPolicies',
        'return_policy_id': 'returnPolicyId',
        'shipping_cost_overrides': 'shippingCostOverrides',
        'take_back_policy_id': 'takeBackPolicyId'
    }

    def __init__(self, best_offer_terms=None, e_bay_plus_if_eligible=None, fulfillment_policy_id=None, payment_policy_id=None, product_compliance_policy_ids=None, regional_product_compliance_policies=None, regional_take_back_policies=None, return_policy_id=None, shipping_cost_overrides=None, take_back_policy_id=None):  # noqa: E501
        """ListingPolicies - a model defined in Swagger"""  # noqa: E501
        self._best_offer_terms = None
        self._e_bay_plus_if_eligible = None
        self._fulfillment_policy_id = None
        self._payment_policy_id = None
        self._product_compliance_policy_ids = None
        self._regional_product_compliance_policies = None
        self._regional_take_back_policies = None
        self._return_policy_id = None
        self._shipping_cost_overrides = None
        self._take_back_policy_id = None
        self.discriminator = None
        if best_offer_terms is not None:
            self.best_offer_terms = best_offer_terms
        if e_bay_plus_if_eligible is not None:
            self.e_bay_plus_if_eligible = e_bay_plus_if_eligible
        if fulfillment_policy_id is not None:
            self.fulfillment_policy_id = fulfillment_policy_id
        if payment_policy_id is not None:
            self.payment_policy_id = payment_policy_id
        if product_compliance_policy_ids is not None:
            self.product_compliance_policy_ids = product_compliance_policy_ids
        if regional_product_compliance_policies is not None:
            self.regional_product_compliance_policies = regional_product_compliance_policies
        if regional_take_back_policies is not None:
            self.regional_take_back_policies = regional_take_back_policies
        if return_policy_id is not None:
            self.return_policy_id = return_policy_id
        if shipping_cost_overrides is not None:
            self.shipping_cost_overrides = shipping_cost_overrides
        if take_back_policy_id is not None:
            self.take_back_policy_id = take_back_policy_id

    @property
    def best_offer_terms(self):
        """Gets the best_offer_terms of this ListingPolicies.  # noqa: E501


        :return: The best_offer_terms of this ListingPolicies.  # noqa: E501
        :rtype: BestOffer
        """
        return self._best_offer_terms

    @best_offer_terms.setter
    def best_offer_terms(self, best_offer_terms):
        """Sets the best_offer_terms of this ListingPolicies.


        :param best_offer_terms: The best_offer_terms of this ListingPolicies.  # noqa: E501
        :type: BestOffer
        """

        self._best_offer_terms = best_offer_terms

    @property
    def e_bay_plus_if_eligible(self):
        """Gets the e_bay_plus_if_eligible of this ListingPolicies.  # noqa: E501

        This field is included in an offer and set to <code>true</code> if a Top-Rated seller is opted in to the eBay Plus program. With the eBay Plus program, qualified sellers must commit to next-day delivery of the item, and the buyers must have an eBay Plus subscription to be eligible to receive the benefits of this program, which are free, next-day delivery, as well as free returns.<br><br><span class=\"tablenote\"><b>Note:</b> Currently, this program is only available on the Germany and Australian sites.</span><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer.  # noqa: E501

        :return: The e_bay_plus_if_eligible of this ListingPolicies.  # noqa: E501
        :rtype: bool
        """
        return self._e_bay_plus_if_eligible

    @e_bay_plus_if_eligible.setter
    def e_bay_plus_if_eligible(self, e_bay_plus_if_eligible):
        """Sets the e_bay_plus_if_eligible of this ListingPolicies.

        This field is included in an offer and set to <code>true</code> if a Top-Rated seller is opted in to the eBay Plus program. With the eBay Plus program, qualified sellers must commit to next-day delivery of the item, and the buyers must have an eBay Plus subscription to be eligible to receive the benefits of this program, which are free, next-day delivery, as well as free returns.<br><br><span class=\"tablenote\"><b>Note:</b> Currently, this program is only available on the Germany and Australian sites.</span><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer.  # noqa: E501

        :param e_bay_plus_if_eligible: The e_bay_plus_if_eligible of this ListingPolicies.  # noqa: E501
        :type: bool
        """

        self._e_bay_plus_if_eligible = e_bay_plus_if_eligible

    @property
    def fulfillment_policy_id(self):
        """Gets the fulfillment_policy_id of this ListingPolicies.  # noqa: E501

        This unique identifier indicates the fulfillment business policy that will be used once an offer is published and converted to an eBay listing. This fulfillment business policy will set all fulfillment-related settings for the eBay listing.<br><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the fulfillment business policy before assigning it to the offer to make sure it is compatible with the inventory item and the offer settings. The seller may also want to review the shipping service costs in the fulfillment policy, and that seller might decide to override the shipping costs for one or more shipping service options by using the <strong>shippingCostOverrides</strong> container.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all return policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/fulfillment_policy/methods/getFulfillmentPolicies\" target=\"_blank\">getFulfillmentPolicies</a> method. There are also calls in the <strong>Account API</strong> to retrieve a fulfillment policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer.<br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :return: The fulfillment_policy_id of this ListingPolicies.  # noqa: E501
        :rtype: str
        """
        return self._fulfillment_policy_id

    @fulfillment_policy_id.setter
    def fulfillment_policy_id(self, fulfillment_policy_id):
        """Sets the fulfillment_policy_id of this ListingPolicies.

        This unique identifier indicates the fulfillment business policy that will be used once an offer is published and converted to an eBay listing. This fulfillment business policy will set all fulfillment-related settings for the eBay listing.<br><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the fulfillment business policy before assigning it to the offer to make sure it is compatible with the inventory item and the offer settings. The seller may also want to review the shipping service costs in the fulfillment policy, and that seller might decide to override the shipping costs for one or more shipping service options by using the <strong>shippingCostOverrides</strong> container.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all return policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/fulfillment_policy/methods/getFulfillmentPolicies\" target=\"_blank\">getFulfillmentPolicies</a> method. There are also calls in the <strong>Account API</strong> to retrieve a fulfillment policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer.<br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :param fulfillment_policy_id: The fulfillment_policy_id of this ListingPolicies.  # noqa: E501
        :type: str
        """

        self._fulfillment_policy_id = fulfillment_policy_id

    @property
    def payment_policy_id(self):
        """Gets the payment_policy_id of this ListingPolicies.  # noqa: E501

        This unique identifier indicates the payment business policy that will be used once an offer is published and converted to an eBay listing. This payment business policy will set all payment-related settings for the eBay listing.<br><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the payment business policy to make sure that it is compatible with the marketplace and listing category before assigning it to the offer.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all payment policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/payment_policy/methods/getPaymentPolicies\" target=\"_blank\">getPaymentPolicies</a> method. There are also calls in the <strong>Account API</strong> to retrieve a payment policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer. <br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :return: The payment_policy_id of this ListingPolicies.  # noqa: E501
        :rtype: str
        """
        return self._payment_policy_id

    @payment_policy_id.setter
    def payment_policy_id(self, payment_policy_id):
        """Sets the payment_policy_id of this ListingPolicies.

        This unique identifier indicates the payment business policy that will be used once an offer is published and converted to an eBay listing. This payment business policy will set all payment-related settings for the eBay listing.<br><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the payment business policy to make sure that it is compatible with the marketplace and listing category before assigning it to the offer.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all payment policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/payment_policy/methods/getPaymentPolicies\" target=\"_blank\">getPaymentPolicies</a> method. There are also calls in the <strong>Account API</strong> to retrieve a payment policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer. <br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :param payment_policy_id: The payment_policy_id of this ListingPolicies.  # noqa: E501
        :type: str
        """

        self._payment_policy_id = payment_policy_id

    @property
    def product_compliance_policy_ids(self):
        """Gets the product_compliance_policy_ids of this ListingPolicies.  # noqa: E501

        This field contains the array of unique identifiers indicating the seller-created <i>global</i> product compliance policies that will be used once an offer is published and converted to a listing.<br><br>Product compliance policies provide buyers with important information and disclosures about products. For example, if you sell batteries and specific disclosures are required to be shared with all potential buyers, your global product compliance policy could contain the required disclosures.<br><br>A maximum of six (6) global product compliance policies may apply to <i>each offer</i>.<span class=\"tablenote\"><b>Note:</b> For countries that support country-specific policies, use <a href=\"#request.listingPolicies.regionalProductCompliancePolicies\">regionalProductCompliancePolicies</a> to apply them to an offer.</span>  # noqa: E501

        :return: The product_compliance_policy_ids of this ListingPolicies.  # noqa: E501
        :rtype: list[str]
        """
        return self._product_compliance_policy_ids

    @product_compliance_policy_ids.setter
    def product_compliance_policy_ids(self, product_compliance_policy_ids):
        """Sets the product_compliance_policy_ids of this ListingPolicies.

        This field contains the array of unique identifiers indicating the seller-created <i>global</i> product compliance policies that will be used once an offer is published and converted to a listing.<br><br>Product compliance policies provide buyers with important information and disclosures about products. For example, if you sell batteries and specific disclosures are required to be shared with all potential buyers, your global product compliance policy could contain the required disclosures.<br><br>A maximum of six (6) global product compliance policies may apply to <i>each offer</i>.<span class=\"tablenote\"><b>Note:</b> For countries that support country-specific policies, use <a href=\"#request.listingPolicies.regionalProductCompliancePolicies\">regionalProductCompliancePolicies</a> to apply them to an offer.</span>  # noqa: E501

        :param product_compliance_policy_ids: The product_compliance_policy_ids of this ListingPolicies.  # noqa: E501
        :type: list[str]
        """

        self._product_compliance_policy_ids = product_compliance_policy_ids

    @property
    def regional_product_compliance_policies(self):
        """Gets the regional_product_compliance_policies of this ListingPolicies.  # noqa: E501


        :return: The regional_product_compliance_policies of this ListingPolicies.  # noqa: E501
        :rtype: RegionalProductCompliancePolicies
        """
        return self._regional_product_compliance_policies

    @regional_product_compliance_policies.setter
    def regional_product_compliance_policies(self, regional_product_compliance_policies):
        """Sets the regional_product_compliance_policies of this ListingPolicies.


        :param regional_product_compliance_policies: The regional_product_compliance_policies of this ListingPolicies.  # noqa: E501
        :type: RegionalProductCompliancePolicies
        """

        self._regional_product_compliance_policies = regional_product_compliance_policies

    @property
    def regional_take_back_policies(self):
        """Gets the regional_take_back_policies of this ListingPolicies.  # noqa: E501


        :return: The regional_take_back_policies of this ListingPolicies.  # noqa: E501
        :rtype: RegionalTakeBackPolicies
        """
        return self._regional_take_back_policies

    @regional_take_back_policies.setter
    def regional_take_back_policies(self, regional_take_back_policies):
        """Sets the regional_take_back_policies of this ListingPolicies.


        :param regional_take_back_policies: The regional_take_back_policies of this ListingPolicies.  # noqa: E501
        :type: RegionalTakeBackPolicies
        """

        self._regional_take_back_policies = regional_take_back_policies

    @property
    def return_policy_id(self):
        """Gets the return_policy_id of this ListingPolicies.  # noqa: E501

        This unique identifier indicates the return business policy that will be used once an offer is published and converted to an eBay listing. This return business policy will set all return policy settings for the eBay listing.<br><br><span class=\"tablenote\"><b>Note:</b> As a part of Digital Services Act (DSA) requirements, as of April 3, 2023, buyers in the EU must be allowed to return an item within 14 days or more, unless the item is exempt. Where applicable, sellers should update their return policies to reflect this requirement of accepting returns from EU buyers.</span><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the return business policy before assigning it to the offer to make sure it is compatible with the inventory item and the offer settings.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all return policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/return_policy/methods/getReturnPolicies\" target=\"_blank\">getReturnPolicies</a> call. There are also calls in the <strong>Account API</strong> to retrieve a return policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer. <br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :return: The return_policy_id of this ListingPolicies.  # noqa: E501
        :rtype: str
        """
        return self._return_policy_id

    @return_policy_id.setter
    def return_policy_id(self, return_policy_id):
        """Sets the return_policy_id of this ListingPolicies.

        This unique identifier indicates the return business policy that will be used once an offer is published and converted to an eBay listing. This return business policy will set all return policy settings for the eBay listing.<br><br><span class=\"tablenote\"><b>Note:</b> As a part of Digital Services Act (DSA) requirements, as of April 3, 2023, buyers in the EU must be allowed to return an item within 14 days or more, unless the item is exempt. Where applicable, sellers should update their return policies to reflect this requirement of accepting returns from EU buyers.</span><br>Business policies are not immediately required for offers, but are required before an offer can be published. The seller should review the return business policy before assigning it to the offer to make sure it is compatible with the inventory item and the offer settings.<br><br>Business policies can be created and managed in My eBay or with the <a href=\"/api-docs/sell/account/overview.html\" target=\"_blank\">Account API</a>. To get a list of all return policies associated with a seller's account on a specific eBay Marketplace, use the Account API's <a href=\"/api-docs/sell/account/resources/return_policy/methods/getReturnPolicies\" target=\"_blank\">getReturnPolicies</a> call. There are also calls in the <strong>Account API</strong> to retrieve a return policy by policy ID or policy name.<br><br>This field will be returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> methods if set for the offer. <br><br><div class=\"msgbox_important\"><p class=\"msgbox_importantInDiv\" data-mc-autonum=\"&lt;b&gt;&lt;span style=&quot;color: #dd1e31;&quot; class=&quot;mcFormatColor&quot;&gt;Important! &lt;/span&gt;&lt;/b&gt;\"><span class=\"autonumber\"><span><b><span style=\"color: #dd1e31;\" class=\"mcFormatColor\">Important!</span></b></span></span>Publish offer note: This field is required before an offer can be published to create an active listing. </p></span></div>  # noqa: E501

        :param return_policy_id: The return_policy_id of this ListingPolicies.  # noqa: E501
        :type: str
        """

        self._return_policy_id = return_policy_id

    @property
    def shipping_cost_overrides(self):
        """Gets the shipping_cost_overrides of this ListingPolicies.  # noqa: E501

        This container is used if the seller wishes to override the shipping costs or surcharge for one or more domestic or international shipping service options defined in the fulfillment listing policy. To override the costs of a specific domestic or international shipping service option, the seller must know the priority/order of that shipping service in the fulfillment listing policy. The name of a shipping service option can be found in the <strong>shippingOptions.shippingServices.shippingServiceCode</strong> field of the fulfillment policy, and the priority/order of that shipping service option is found in the <strong>shippingOptions.shippingServices.sortOrderId</strong> field. Both of these values can be retrieved by searching for that fulfillment policy with the <strong>getFulfillmentPolicies</strong> or <strong>getFulfillmentPolicyByName</strong> calls of the <strong>Account API</strong>. The <strong>shippingCostOverrides.priority</strong> value should match the <strong>shippingOptions.shippingServices.sortOrderId</strong> in order to override the shipping costs for that shipping service option. The seller must also ensure that the <strong>shippingServiceType</strong> value is set to <code>DOMESTIC</code> to override a domestic shipping service option, or to <code>INTERNATIONAL</code> to override an international shipping service option.<br><br>A separate <strong>ShippingCostOverrides</strong> node is needed for each shipping service option whose costs are being overridden. All defined fields of the <strong>shippingCostOverrides</strong> container should be included, even if the shipping costs and surcharge values are not changing.<br><br>The <strong>shippingCostOverrides</strong> container is returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> calls if one or more shipping cost overrides are being applied to the fulfillment policy.  # noqa: E501

        :return: The shipping_cost_overrides of this ListingPolicies.  # noqa: E501
        :rtype: list[ShippingCostOverride]
        """
        return self._shipping_cost_overrides

    @shipping_cost_overrides.setter
    def shipping_cost_overrides(self, shipping_cost_overrides):
        """Sets the shipping_cost_overrides of this ListingPolicies.

        This container is used if the seller wishes to override the shipping costs or surcharge for one or more domestic or international shipping service options defined in the fulfillment listing policy. To override the costs of a specific domestic or international shipping service option, the seller must know the priority/order of that shipping service in the fulfillment listing policy. The name of a shipping service option can be found in the <strong>shippingOptions.shippingServices.shippingServiceCode</strong> field of the fulfillment policy, and the priority/order of that shipping service option is found in the <strong>shippingOptions.shippingServices.sortOrderId</strong> field. Both of these values can be retrieved by searching for that fulfillment policy with the <strong>getFulfillmentPolicies</strong> or <strong>getFulfillmentPolicyByName</strong> calls of the <strong>Account API</strong>. The <strong>shippingCostOverrides.priority</strong> value should match the <strong>shippingOptions.shippingServices.sortOrderId</strong> in order to override the shipping costs for that shipping service option. The seller must also ensure that the <strong>shippingServiceType</strong> value is set to <code>DOMESTIC</code> to override a domestic shipping service option, or to <code>INTERNATIONAL</code> to override an international shipping service option.<br><br>A separate <strong>ShippingCostOverrides</strong> node is needed for each shipping service option whose costs are being overridden. All defined fields of the <strong>shippingCostOverrides</strong> container should be included, even if the shipping costs and surcharge values are not changing.<br><br>The <strong>shippingCostOverrides</strong> container is returned in the <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffer\" target=\"_blank\">getOffer</a> and <a href=\"/api-docs/sell/inventory/resources/offer/methods/getOffers\" target=\"_blank\">getOffers</a> calls if one or more shipping cost overrides are being applied to the fulfillment policy.  # noqa: E501

        :param shipping_cost_overrides: The shipping_cost_overrides of this ListingPolicies.  # noqa: E501
        :type: list[ShippingCostOverride]
        """

        self._shipping_cost_overrides = shipping_cost_overrides

    @property
    def take_back_policy_id(self):
        """Gets the take_back_policy_id of this ListingPolicies.  # noqa: E501

        This unique identifier indicates the seller-created <i>global</i> take-back policy that will be used once an offer is published and converted to a listing.<br><br>One (1) global take-back policy may be specified <i>per offer</i>.<br><span class=\"tablenote\"><b>Note:</b> For countries that support country-specific policies, use <a href=\"#request.listingPolicies.regionalTakeBackPolicies\">regionalTakeBackPolicies</a> to apply them to an offer.</span>  # noqa: E501

        :return: The take_back_policy_id of this ListingPolicies.  # noqa: E501
        :rtype: str
        """
        return self._take_back_policy_id

    @take_back_policy_id.setter
    def take_back_policy_id(self, take_back_policy_id):
        """Sets the take_back_policy_id of this ListingPolicies.

        This unique identifier indicates the seller-created <i>global</i> take-back policy that will be used once an offer is published and converted to a listing.<br><br>One (1) global take-back policy may be specified <i>per offer</i>.<br><span class=\"tablenote\"><b>Note:</b> For countries that support country-specific policies, use <a href=\"#request.listingPolicies.regionalTakeBackPolicies\">regionalTakeBackPolicies</a> to apply them to an offer.</span>  # noqa: E501

        :param take_back_policy_id: The take_back_policy_id of this ListingPolicies.  # noqa: E501
        :type: str
        """

        self._take_back_policy_id = take_back_policy_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ListingPolicies, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ListingPolicies):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
