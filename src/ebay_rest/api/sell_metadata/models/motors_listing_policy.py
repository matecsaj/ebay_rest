# coding: utf-8

"""
    Metadata API

    The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.  # noqa: E501

    OpenAPI spec version: v1.11.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MotorsListingPolicy(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'category_id': 'str',
        'category_tree_id': 'str',
        'deposit_supported': 'bool',
        'ebay_motors_pro_ad_format_enabled': 'str',
        'ebay_motors_pro_auto_accept_enabled': 'bool',
        'ebay_motors_pro_auto_decline_enabled': 'bool',
        'ebay_motors_pro_best_offer_enabled': 'str',
        'ebay_motors_pro_company_name_enabled': 'bool',
        'ebay_motors_pro_contact_by_address_enabled': 'bool',
        'ebay_motors_pro_contact_by_email_enabled': 'bool',
        'ebay_motors_pro_contact_by_phone_enabled': 'bool',
        'ebay_motors_pro_counter_offer_enabled': 'bool',
        'ebay_motors_pro_payment_method_check_out_enabled': 'str',
        'ebay_motors_pro_phone_count': 'int',
        'ebay_motors_pro_seller_contact_details_enabled': 'bool',
        'ebay_motors_pro_shipping_method_enabled': 'bool',
        'ebay_motors_pro_street_count': 'int',
        'epid_supported': 'bool',
        'k_type_supported': 'bool',
        'local_listing_distances': 'list[LocalListingDistance]',
        'local_market_ad_format_enabled': 'str',
        'local_market_auto_accept_enabled': 'bool',
        'local_market_auto_decline_enabled': 'bool',
        'local_market_best_offer_enabled': 'str',
        'local_market_company_name_enabled': 'bool',
        'local_market_contact_by_address_enabled': 'bool',
        'local_market_contact_by_email_enabled': 'bool',
        'local_market_contact_by_phone_enabled': 'bool',
        'local_market_counter_offer_enabled': 'bool',
        'local_market_non_subscription': 'bool',
        'local_market_payment_method_check_out_enabled': 'str',
        'local_market_phone_count': 'int',
        'local_market_premium_subscription': 'bool',
        'local_market_regular_subscription': 'bool',
        'local_market_seller_contact_details_enabled': 'bool',
        'local_market_shipping_method_enabled': 'bool',
        'local_market_speciality_subscription': 'bool',
        'local_market_street_count': 'int',
        'max_granular_fitment_count': 'int',
        'max_item_compatibility': 'int',
        'min_item_compatibility': 'int',
        'non_subscription': 'str',
        'premium_subscription': 'str',
        'regular_subscription': 'str',
        'seller_provided_title_supported': 'bool',
        'speciality_subscription': 'str',
        'vin_supported': 'bool',
        'vrm_supported': 'bool'
    }

    attribute_map = {
        'category_id': 'categoryId',
        'category_tree_id': 'categoryTreeId',
        'deposit_supported': 'depositSupported',
        'ebay_motors_pro_ad_format_enabled': 'ebayMotorsProAdFormatEnabled',
        'ebay_motors_pro_auto_accept_enabled': 'ebayMotorsProAutoAcceptEnabled',
        'ebay_motors_pro_auto_decline_enabled': 'ebayMotorsProAutoDeclineEnabled',
        'ebay_motors_pro_best_offer_enabled': 'ebayMotorsProBestOfferEnabled',
        'ebay_motors_pro_company_name_enabled': 'ebayMotorsProCompanyNameEnabled',
        'ebay_motors_pro_contact_by_address_enabled': 'ebayMotorsProContactByAddressEnabled',
        'ebay_motors_pro_contact_by_email_enabled': 'ebayMotorsProContactByEmailEnabled',
        'ebay_motors_pro_contact_by_phone_enabled': 'ebayMotorsProContactByPhoneEnabled',
        'ebay_motors_pro_counter_offer_enabled': 'ebayMotorsProCounterOfferEnabled',
        'ebay_motors_pro_payment_method_check_out_enabled': 'ebayMotorsProPaymentMethodCheckOutEnabled',
        'ebay_motors_pro_phone_count': 'ebayMotorsProPhoneCount',
        'ebay_motors_pro_seller_contact_details_enabled': 'ebayMotorsProSellerContactDetailsEnabled',
        'ebay_motors_pro_shipping_method_enabled': 'ebayMotorsProShippingMethodEnabled',
        'ebay_motors_pro_street_count': 'ebayMotorsProStreetCount',
        'epid_supported': 'epidSupported',
        'k_type_supported': 'kTypeSupported',
        'local_listing_distances': 'localListingDistances',
        'local_market_ad_format_enabled': 'localMarketAdFormatEnabled',
        'local_market_auto_accept_enabled': 'localMarketAutoAcceptEnabled',
        'local_market_auto_decline_enabled': 'localMarketAutoDeclineEnabled',
        'local_market_best_offer_enabled': 'localMarketBestOfferEnabled',
        'local_market_company_name_enabled': 'localMarketCompanyNameEnabled',
        'local_market_contact_by_address_enabled': 'localMarketContactByAddressEnabled',
        'local_market_contact_by_email_enabled': 'localMarketContactByEmailEnabled',
        'local_market_contact_by_phone_enabled': 'localMarketContactByPhoneEnabled',
        'local_market_counter_offer_enabled': 'localMarketCounterOfferEnabled',
        'local_market_non_subscription': 'localMarketNonSubscription',
        'local_market_payment_method_check_out_enabled': 'localMarketPaymentMethodCheckOutEnabled',
        'local_market_phone_count': 'localMarketPhoneCount',
        'local_market_premium_subscription': 'localMarketPremiumSubscription',
        'local_market_regular_subscription': 'localMarketRegularSubscription',
        'local_market_seller_contact_details_enabled': 'localMarketSellerContactDetailsEnabled',
        'local_market_shipping_method_enabled': 'localMarketShippingMethodEnabled',
        'local_market_speciality_subscription': 'localMarketSpecialitySubscription',
        'local_market_street_count': 'localMarketStreetCount',
        'max_granular_fitment_count': 'maxGranularFitmentCount',
        'max_item_compatibility': 'maxItemCompatibility',
        'min_item_compatibility': 'minItemCompatibility',
        'non_subscription': 'nonSubscription',
        'premium_subscription': 'premiumSubscription',
        'regular_subscription': 'regularSubscription',
        'seller_provided_title_supported': 'sellerProvidedTitleSupported',
        'speciality_subscription': 'specialitySubscription',
        'vin_supported': 'vinSupported',
        'vrm_supported': 'vrmSupported'
    }

    def __init__(self, category_id=None, category_tree_id=None, deposit_supported=None, ebay_motors_pro_ad_format_enabled=None, ebay_motors_pro_auto_accept_enabled=None, ebay_motors_pro_auto_decline_enabled=None, ebay_motors_pro_best_offer_enabled=None, ebay_motors_pro_company_name_enabled=None, ebay_motors_pro_contact_by_address_enabled=None, ebay_motors_pro_contact_by_email_enabled=None, ebay_motors_pro_contact_by_phone_enabled=None, ebay_motors_pro_counter_offer_enabled=None, ebay_motors_pro_payment_method_check_out_enabled=None, ebay_motors_pro_phone_count=None, ebay_motors_pro_seller_contact_details_enabled=None, ebay_motors_pro_shipping_method_enabled=None, ebay_motors_pro_street_count=None, epid_supported=None, k_type_supported=None, local_listing_distances=None, local_market_ad_format_enabled=None, local_market_auto_accept_enabled=None, local_market_auto_decline_enabled=None, local_market_best_offer_enabled=None, local_market_company_name_enabled=None, local_market_contact_by_address_enabled=None, local_market_contact_by_email_enabled=None, local_market_contact_by_phone_enabled=None, local_market_counter_offer_enabled=None, local_market_non_subscription=None, local_market_payment_method_check_out_enabled=None, local_market_phone_count=None, local_market_premium_subscription=None, local_market_regular_subscription=None, local_market_seller_contact_details_enabled=None, local_market_shipping_method_enabled=None, local_market_speciality_subscription=None, local_market_street_count=None, max_granular_fitment_count=None, max_item_compatibility=None, min_item_compatibility=None, non_subscription=None, premium_subscription=None, regular_subscription=None, seller_provided_title_supported=None, speciality_subscription=None, vin_supported=None, vrm_supported=None):  # noqa: E501
        """MotorsListingPolicy - a model defined in Swagger"""  # noqa: E501
        self._category_id = None
        self._category_tree_id = None
        self._deposit_supported = None
        self._ebay_motors_pro_ad_format_enabled = None
        self._ebay_motors_pro_auto_accept_enabled = None
        self._ebay_motors_pro_auto_decline_enabled = None
        self._ebay_motors_pro_best_offer_enabled = None
        self._ebay_motors_pro_company_name_enabled = None
        self._ebay_motors_pro_contact_by_address_enabled = None
        self._ebay_motors_pro_contact_by_email_enabled = None
        self._ebay_motors_pro_contact_by_phone_enabled = None
        self._ebay_motors_pro_counter_offer_enabled = None
        self._ebay_motors_pro_payment_method_check_out_enabled = None
        self._ebay_motors_pro_phone_count = None
        self._ebay_motors_pro_seller_contact_details_enabled = None
        self._ebay_motors_pro_shipping_method_enabled = None
        self._ebay_motors_pro_street_count = None
        self._epid_supported = None
        self._k_type_supported = None
        self._local_listing_distances = None
        self._local_market_ad_format_enabled = None
        self._local_market_auto_accept_enabled = None
        self._local_market_auto_decline_enabled = None
        self._local_market_best_offer_enabled = None
        self._local_market_company_name_enabled = None
        self._local_market_contact_by_address_enabled = None
        self._local_market_contact_by_email_enabled = None
        self._local_market_contact_by_phone_enabled = None
        self._local_market_counter_offer_enabled = None
        self._local_market_non_subscription = None
        self._local_market_payment_method_check_out_enabled = None
        self._local_market_phone_count = None
        self._local_market_premium_subscription = None
        self._local_market_regular_subscription = None
        self._local_market_seller_contact_details_enabled = None
        self._local_market_shipping_method_enabled = None
        self._local_market_speciality_subscription = None
        self._local_market_street_count = None
        self._max_granular_fitment_count = None
        self._max_item_compatibility = None
        self._min_item_compatibility = None
        self._non_subscription = None
        self._premium_subscription = None
        self._regular_subscription = None
        self._seller_provided_title_supported = None
        self._speciality_subscription = None
        self._vin_supported = None
        self._vrm_supported = None
        self.discriminator = None
        if category_id is not None:
            self.category_id = category_id
        if category_tree_id is not None:
            self.category_tree_id = category_tree_id
        if deposit_supported is not None:
            self.deposit_supported = deposit_supported
        if ebay_motors_pro_ad_format_enabled is not None:
            self.ebay_motors_pro_ad_format_enabled = ebay_motors_pro_ad_format_enabled
        if ebay_motors_pro_auto_accept_enabled is not None:
            self.ebay_motors_pro_auto_accept_enabled = ebay_motors_pro_auto_accept_enabled
        if ebay_motors_pro_auto_decline_enabled is not None:
            self.ebay_motors_pro_auto_decline_enabled = ebay_motors_pro_auto_decline_enabled
        if ebay_motors_pro_best_offer_enabled is not None:
            self.ebay_motors_pro_best_offer_enabled = ebay_motors_pro_best_offer_enabled
        if ebay_motors_pro_company_name_enabled is not None:
            self.ebay_motors_pro_company_name_enabled = ebay_motors_pro_company_name_enabled
        if ebay_motors_pro_contact_by_address_enabled is not None:
            self.ebay_motors_pro_contact_by_address_enabled = ebay_motors_pro_contact_by_address_enabled
        if ebay_motors_pro_contact_by_email_enabled is not None:
            self.ebay_motors_pro_contact_by_email_enabled = ebay_motors_pro_contact_by_email_enabled
        if ebay_motors_pro_contact_by_phone_enabled is not None:
            self.ebay_motors_pro_contact_by_phone_enabled = ebay_motors_pro_contact_by_phone_enabled
        if ebay_motors_pro_counter_offer_enabled is not None:
            self.ebay_motors_pro_counter_offer_enabled = ebay_motors_pro_counter_offer_enabled
        if ebay_motors_pro_payment_method_check_out_enabled is not None:
            self.ebay_motors_pro_payment_method_check_out_enabled = ebay_motors_pro_payment_method_check_out_enabled
        if ebay_motors_pro_phone_count is not None:
            self.ebay_motors_pro_phone_count = ebay_motors_pro_phone_count
        if ebay_motors_pro_seller_contact_details_enabled is not None:
            self.ebay_motors_pro_seller_contact_details_enabled = ebay_motors_pro_seller_contact_details_enabled
        if ebay_motors_pro_shipping_method_enabled is not None:
            self.ebay_motors_pro_shipping_method_enabled = ebay_motors_pro_shipping_method_enabled
        if ebay_motors_pro_street_count is not None:
            self.ebay_motors_pro_street_count = ebay_motors_pro_street_count
        if epid_supported is not None:
            self.epid_supported = epid_supported
        if k_type_supported is not None:
            self.k_type_supported = k_type_supported
        if local_listing_distances is not None:
            self.local_listing_distances = local_listing_distances
        if local_market_ad_format_enabled is not None:
            self.local_market_ad_format_enabled = local_market_ad_format_enabled
        if local_market_auto_accept_enabled is not None:
            self.local_market_auto_accept_enabled = local_market_auto_accept_enabled
        if local_market_auto_decline_enabled is not None:
            self.local_market_auto_decline_enabled = local_market_auto_decline_enabled
        if local_market_best_offer_enabled is not None:
            self.local_market_best_offer_enabled = local_market_best_offer_enabled
        if local_market_company_name_enabled is not None:
            self.local_market_company_name_enabled = local_market_company_name_enabled
        if local_market_contact_by_address_enabled is not None:
            self.local_market_contact_by_address_enabled = local_market_contact_by_address_enabled
        if local_market_contact_by_email_enabled is not None:
            self.local_market_contact_by_email_enabled = local_market_contact_by_email_enabled
        if local_market_contact_by_phone_enabled is not None:
            self.local_market_contact_by_phone_enabled = local_market_contact_by_phone_enabled
        if local_market_counter_offer_enabled is not None:
            self.local_market_counter_offer_enabled = local_market_counter_offer_enabled
        if local_market_non_subscription is not None:
            self.local_market_non_subscription = local_market_non_subscription
        if local_market_payment_method_check_out_enabled is not None:
            self.local_market_payment_method_check_out_enabled = local_market_payment_method_check_out_enabled
        if local_market_phone_count is not None:
            self.local_market_phone_count = local_market_phone_count
        if local_market_premium_subscription is not None:
            self.local_market_premium_subscription = local_market_premium_subscription
        if local_market_regular_subscription is not None:
            self.local_market_regular_subscription = local_market_regular_subscription
        if local_market_seller_contact_details_enabled is not None:
            self.local_market_seller_contact_details_enabled = local_market_seller_contact_details_enabled
        if local_market_shipping_method_enabled is not None:
            self.local_market_shipping_method_enabled = local_market_shipping_method_enabled
        if local_market_speciality_subscription is not None:
            self.local_market_speciality_subscription = local_market_speciality_subscription
        if local_market_street_count is not None:
            self.local_market_street_count = local_market_street_count
        if max_granular_fitment_count is not None:
            self.max_granular_fitment_count = max_granular_fitment_count
        if max_item_compatibility is not None:
            self.max_item_compatibility = max_item_compatibility
        if min_item_compatibility is not None:
            self.min_item_compatibility = min_item_compatibility
        if non_subscription is not None:
            self.non_subscription = non_subscription
        if premium_subscription is not None:
            self.premium_subscription = premium_subscription
        if regular_subscription is not None:
            self.regular_subscription = regular_subscription
        if seller_provided_title_supported is not None:
            self.seller_provided_title_supported = seller_provided_title_supported
        if speciality_subscription is not None:
            self.speciality_subscription = speciality_subscription
        if vin_supported is not None:
            self.vin_supported = vin_supported
        if vrm_supported is not None:
            self.vrm_supported = vrm_supported

    @property
    def category_id(self):
        """Gets the category_id of this MotorsListingPolicy.  # noqa: E501

        The unique identifier of the eBay leaf category for which metadata is being returned.  # noqa: E501

        :return: The category_id of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this MotorsListingPolicy.

        The unique identifier of the eBay leaf category for which metadata is being returned.  # noqa: E501

        :param category_id: The category_id of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._category_id = category_id

    @property
    def category_tree_id(self):
        """Gets the category_tree_id of this MotorsListingPolicy.  # noqa: E501

        The unique identifier of the category tree.  # noqa: E501

        :return: The category_tree_id of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._category_tree_id

    @category_tree_id.setter
    def category_tree_id(self, category_tree_id):
        """Sets the category_tree_id of this MotorsListingPolicy.

        The unique identifier of the category tree.  # noqa: E501

        :param category_tree_id: The category_tree_id of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._category_tree_id = category_tree_id

    @property
    def deposit_supported(self):
        """Gets the deposit_supported of this MotorsListingPolicy.  # noqa: E501

        This field is returned as <code>true</code> if the corresponding category supports the use of a deposit/down payment on a motor vehicle listing. In an AddItem call, the seller can configure a down payment for a motor vehicle listing using the PaymentDetails container.  # noqa: E501

        :return: The deposit_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._deposit_supported

    @deposit_supported.setter
    def deposit_supported(self, deposit_supported):
        """Sets the deposit_supported of this MotorsListingPolicy.

        This field is returned as <code>true</code> if the corresponding category supports the use of a deposit/down payment on a motor vehicle listing. In an AddItem call, the seller can configure a down payment for a motor vehicle listing using the PaymentDetails container.  # noqa: E501

        :param deposit_supported: The deposit_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._deposit_supported = deposit_supported

    @property
    def ebay_motors_pro_ad_format_enabled(self):
        """Gets the ebay_motors_pro_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether or not eBay Motors Pro sellers can use classified ads in this category to sell their vehicles. This element is applicable for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:AdFormatEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The ebay_motors_pro_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._ebay_motors_pro_ad_format_enabled

    @ebay_motors_pro_ad_format_enabled.setter
    def ebay_motors_pro_ad_format_enabled(self, ebay_motors_pro_ad_format_enabled):
        """Sets the ebay_motors_pro_ad_format_enabled of this MotorsListingPolicy.

        Indicates whether or not eBay Motors Pro sellers can use classified ads in this category to sell their vehicles. This element is applicable for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:AdFormatEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param ebay_motors_pro_ad_format_enabled: The ebay_motors_pro_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._ebay_motors_pro_ad_format_enabled = ebay_motors_pro_ad_format_enabled

    @property
    def ebay_motors_pro_auto_accept_enabled(self):
        """Gets the ebay_motors_pro_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether or not the category supports the Best Offer Auto Accept feature for eBay Motors Pro listings. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_auto_accept_enabled

    @ebay_motors_pro_auto_accept_enabled.setter
    def ebay_motors_pro_auto_accept_enabled(self, ebay_motors_pro_auto_accept_enabled):
        """Sets the ebay_motors_pro_auto_accept_enabled of this MotorsListingPolicy.

        Indicates whether or not the category supports the Best Offer Auto Accept feature for eBay Motors Pro listings. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_auto_accept_enabled: The ebay_motors_pro_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_auto_accept_enabled = ebay_motors_pro_auto_accept_enabled

    @property
    def ebay_motors_pro_auto_decline_enabled(self):
        """Gets the ebay_motors_pro_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether or not the category allows auto-decline for Best Offers for eBay Motors Classified Ad listings. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_auto_decline_enabled

    @ebay_motors_pro_auto_decline_enabled.setter
    def ebay_motors_pro_auto_decline_enabled(self, ebay_motors_pro_auto_decline_enabled):
        """Sets the ebay_motors_pro_auto_decline_enabled of this MotorsListingPolicy.

        Indicates whether or not the category allows auto-decline for Best Offers for eBay Motors Classified Ad listings. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_auto_decline_enabled: The ebay_motors_pro_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_auto_decline_enabled = ebay_motors_pro_auto_decline_enabled

    @property
    def ebay_motors_pro_best_offer_enabled(self):
        """Gets the ebay_motors_pro_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501

        This enumerated value indicates whether or not Best Offer features are supported for eBay Motors Classified Ad listings in this category. This element is for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdBestOfferEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The ebay_motors_pro_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._ebay_motors_pro_best_offer_enabled

    @ebay_motors_pro_best_offer_enabled.setter
    def ebay_motors_pro_best_offer_enabled(self, ebay_motors_pro_best_offer_enabled):
        """Sets the ebay_motors_pro_best_offer_enabled of this MotorsListingPolicy.

        This enumerated value indicates whether or not Best Offer features are supported for eBay Motors Classified Ad listings in this category. This element is for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdBestOfferEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param ebay_motors_pro_best_offer_enabled: The ebay_motors_pro_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._ebay_motors_pro_best_offer_enabled = ebay_motors_pro_best_offer_enabled

    @property
    def ebay_motors_pro_company_name_enabled(self):
        """Gets the ebay_motors_pro_company_name_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including the company name in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_company_name_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_company_name_enabled

    @ebay_motors_pro_company_name_enabled.setter
    def ebay_motors_pro_company_name_enabled(self, ebay_motors_pro_company_name_enabled):
        """Sets the ebay_motors_pro_company_name_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including the company name in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_company_name_enabled: The ebay_motors_pro_company_name_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_company_name_enabled = ebay_motors_pro_company_name_enabled

    @property
    def ebay_motors_pro_contact_by_address_enabled(self):
        """Gets the ebay_motors_pro_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including the address in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_contact_by_address_enabled

    @ebay_motors_pro_contact_by_address_enabled.setter
    def ebay_motors_pro_contact_by_address_enabled(self, ebay_motors_pro_contact_by_address_enabled):
        """Sets the ebay_motors_pro_contact_by_address_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including the address in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_contact_by_address_enabled: The ebay_motors_pro_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_contact_by_address_enabled = ebay_motors_pro_contact_by_address_enabled

    @property
    def ebay_motors_pro_contact_by_email_enabled(self):
        """Gets the ebay_motors_pro_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including an email address in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_contact_by_email_enabled

    @ebay_motors_pro_contact_by_email_enabled.setter
    def ebay_motors_pro_contact_by_email_enabled(self, ebay_motors_pro_contact_by_email_enabled):
        """Sets the ebay_motors_pro_contact_by_email_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including an email address in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_contact_by_email_enabled: The ebay_motors_pro_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_contact_by_email_enabled = ebay_motors_pro_contact_by_email_enabled

    @property
    def ebay_motors_pro_contact_by_phone_enabled(self):
        """Gets the ebay_motors_pro_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including the telephone in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_contact_by_phone_enabled

    @ebay_motors_pro_contact_by_phone_enabled.setter
    def ebay_motors_pro_contact_by_phone_enabled(self, ebay_motors_pro_contact_by_phone_enabled):
        """Sets the ebay_motors_pro_contact_by_phone_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including the telephone in the seller's contact information. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_contact_by_phone_enabled: The ebay_motors_pro_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_contact_by_phone_enabled = ebay_motors_pro_contact_by_phone_enabled

    @property
    def ebay_motors_pro_counter_offer_enabled(self):
        """Gets the ebay_motors_pro_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether counter offers are allowed on Best Offers for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_counter_offer_enabled

    @ebay_motors_pro_counter_offer_enabled.setter
    def ebay_motors_pro_counter_offer_enabled(self, ebay_motors_pro_counter_offer_enabled):
        """Sets the ebay_motors_pro_counter_offer_enabled of this MotorsListingPolicy.

        Indicates whether counter offers are allowed on Best Offers for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_counter_offer_enabled: The ebay_motors_pro_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_counter_offer_enabled = ebay_motors_pro_counter_offer_enabled

    @property
    def ebay_motors_pro_payment_method_check_out_enabled(self):
        """Gets the ebay_motors_pro_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501

        This enumerated value indicates whether this category supports that the payment method should be displayed to the user for this category in an eBay Motors Classified Ad listing. Even if enabled, checkout may or may not be enabled. This element is for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdPaymentMethodEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The ebay_motors_pro_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._ebay_motors_pro_payment_method_check_out_enabled

    @ebay_motors_pro_payment_method_check_out_enabled.setter
    def ebay_motors_pro_payment_method_check_out_enabled(self, ebay_motors_pro_payment_method_check_out_enabled):
        """Sets the ebay_motors_pro_payment_method_check_out_enabled of this MotorsListingPolicy.

        This enumerated value indicates whether this category supports that the payment method should be displayed to the user for this category in an eBay Motors Classified Ad listing. Even if enabled, checkout may or may not be enabled. This element is for eBay Motors Pro users. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdPaymentMethodEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param ebay_motors_pro_payment_method_check_out_enabled: The ebay_motors_pro_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._ebay_motors_pro_payment_method_check_out_enabled = ebay_motors_pro_payment_method_check_out_enabled

    @property
    def ebay_motors_pro_phone_count(self):
        """Gets the ebay_motors_pro_phone_count of this MotorsListingPolicy.  # noqa: E501

        Indicates the number of phone numbers that can be included through contact information for this category. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_phone_count of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._ebay_motors_pro_phone_count

    @ebay_motors_pro_phone_count.setter
    def ebay_motors_pro_phone_count(self, ebay_motors_pro_phone_count):
        """Sets the ebay_motors_pro_phone_count of this MotorsListingPolicy.

        Indicates the number of phone numbers that can be included through contact information for this category. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_phone_count: The ebay_motors_pro_phone_count of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._ebay_motors_pro_phone_count = ebay_motors_pro_phone_count

    @property
    def ebay_motors_pro_seller_contact_details_enabled(self):
        """Gets the ebay_motors_pro_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category allows seller-level contact information for eBay Motors Classified Ad listings. A value of true means seller-level contact information is available for Classified Ad listings. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_seller_contact_details_enabled

    @ebay_motors_pro_seller_contact_details_enabled.setter
    def ebay_motors_pro_seller_contact_details_enabled(self, ebay_motors_pro_seller_contact_details_enabled):
        """Sets the ebay_motors_pro_seller_contact_details_enabled of this MotorsListingPolicy.

        Indicates whether this category allows seller-level contact information for eBay Motors Classified Ad listings. A value of true means seller-level contact information is available for Classified Ad listings. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_seller_contact_details_enabled: The ebay_motors_pro_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_seller_contact_details_enabled = ebay_motors_pro_seller_contact_details_enabled

    @property
    def ebay_motors_pro_shipping_method_enabled(self):
        """Gets the ebay_motors_pro_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates if shipping options should be displayed to the user for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._ebay_motors_pro_shipping_method_enabled

    @ebay_motors_pro_shipping_method_enabled.setter
    def ebay_motors_pro_shipping_method_enabled(self, ebay_motors_pro_shipping_method_enabled):
        """Sets the ebay_motors_pro_shipping_method_enabled of this MotorsListingPolicy.

        Indicates if shipping options should be displayed to the user for this category in an eBay Motors Classified Ad listing. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_shipping_method_enabled: The ebay_motors_pro_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._ebay_motors_pro_shipping_method_enabled = ebay_motors_pro_shipping_method_enabled

    @property
    def ebay_motors_pro_street_count(self):
        """Gets the ebay_motors_pro_street_count of this MotorsListingPolicy.  # noqa: E501

        This field indicates the number of street addresses allowed in contact information for this category. This element is for eBay Motors Pro users.  # noqa: E501

        :return: The ebay_motors_pro_street_count of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._ebay_motors_pro_street_count

    @ebay_motors_pro_street_count.setter
    def ebay_motors_pro_street_count(self, ebay_motors_pro_street_count):
        """Sets the ebay_motors_pro_street_count of this MotorsListingPolicy.

        This field indicates the number of street addresses allowed in contact information for this category. This element is for eBay Motors Pro users.  # noqa: E501

        :param ebay_motors_pro_street_count: The ebay_motors_pro_street_count of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._ebay_motors_pro_street_count = ebay_motors_pro_street_count

    @property
    def epid_supported(self):
        """Gets the epid_supported of this MotorsListingPolicy.  # noqa: E501

        If returned as <code>true</code>, this indicates the category supports the use of an eBay Product ID (e.g. ePID) to identify which motorcycles and/or scooters are compatible with a motor vehicle part or accessory. ePIDs can only be used to identify motorcycles and scooters on the Germany and UK sites.  # noqa: E501

        :return: The epid_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._epid_supported

    @epid_supported.setter
    def epid_supported(self, epid_supported):
        """Sets the epid_supported of this MotorsListingPolicy.

        If returned as <code>true</code>, this indicates the category supports the use of an eBay Product ID (e.g. ePID) to identify which motorcycles and/or scooters are compatible with a motor vehicle part or accessory. ePIDs can only be used to identify motorcycles and scooters on the Germany and UK sites.  # noqa: E501

        :param epid_supported: The epid_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._epid_supported = epid_supported

    @property
    def k_type_supported(self):
        """Gets the k_type_supported of this MotorsListingPolicy.  # noqa: E501

        This field indicates whether or not the category supports the use of a K type to identify the cars and trucks compatible with a motor vehicle part or accessory. Only the AU, DE, ES, FR, IT, and UK marketplaces support the use of K types. See <a href=\"/api-docs/user-guides/static/trading-user-guide/manually-specify-compatibility.html#ktype\" target=\"_blank\">Compatibility by K type</a> for more information  # noqa: E501

        :return: The k_type_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._k_type_supported

    @k_type_supported.setter
    def k_type_supported(self, k_type_supported):
        """Sets the k_type_supported of this MotorsListingPolicy.

        This field indicates whether or not the category supports the use of a K type to identify the cars and trucks compatible with a motor vehicle part or accessory. Only the AU, DE, ES, FR, IT, and UK marketplaces support the use of K types. See <a href=\"/api-docs/user-guides/static/trading-user-guide/manually-specify-compatibility.html#ktype\" target=\"_blank\">Compatibility by K type</a> for more information  # noqa: E501

        :param k_type_supported: The k_type_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._k_type_supported = k_type_supported

    @property
    def local_listing_distances(self):
        """Gets the local_listing_distances of this MotorsListingPolicy.  # noqa: E501

        This array shows the supported distances (in miles) for different types of Local Market subscription types in this category. Motor vehicle listings will be shown to buyers located within these proximities of the vehicle's location.  # noqa: E501

        :return: The local_listing_distances of this MotorsListingPolicy.  # noqa: E501
        :rtype: list[LocalListingDistance]
        """
        return self._local_listing_distances

    @local_listing_distances.setter
    def local_listing_distances(self, local_listing_distances):
        """Sets the local_listing_distances of this MotorsListingPolicy.

        This array shows the supported distances (in miles) for different types of Local Market subscription types in this category. Motor vehicle listings will be shown to buyers located within these proximities of the vehicle's location.  # noqa: E501

        :param local_listing_distances: The local_listing_distances of this MotorsListingPolicy.  # noqa: E501
        :type: list[LocalListingDistance]
        """

        self._local_listing_distances = local_listing_distances

    @property
    def local_market_ad_format_enabled(self):
        """Gets the local_market_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501

        Specifies whether this category supports Motor Local Market Classified Ad listings. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:AdFormatEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The local_market_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._local_market_ad_format_enabled

    @local_market_ad_format_enabled.setter
    def local_market_ad_format_enabled(self, local_market_ad_format_enabled):
        """Sets the local_market_ad_format_enabled of this MotorsListingPolicy.

        Specifies whether this category supports Motor Local Market Classified Ad listings. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:AdFormatEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param local_market_ad_format_enabled: The local_market_ad_format_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._local_market_ad_format_enabled = local_market_ad_format_enabled

    @property
    def local_market_auto_accept_enabled(self):
        """Gets the local_market_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501

        Specifies whether this category supports auto-accept for Best Offers for Motors Local Market Classified Ads.  # noqa: E501

        :return: The local_market_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_auto_accept_enabled

    @local_market_auto_accept_enabled.setter
    def local_market_auto_accept_enabled(self, local_market_auto_accept_enabled):
        """Sets the local_market_auto_accept_enabled of this MotorsListingPolicy.

        Specifies whether this category supports auto-accept for Best Offers for Motors Local Market Classified Ads.  # noqa: E501

        :param local_market_auto_accept_enabled: The local_market_auto_accept_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_auto_accept_enabled = local_market_auto_accept_enabled

    @property
    def local_market_auto_decline_enabled(self):
        """Gets the local_market_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501

        Specifies whether this category supports auto-decline for Best Offers for Motors Local Market Classified Ads.  # noqa: E501

        :return: The local_market_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_auto_decline_enabled

    @local_market_auto_decline_enabled.setter
    def local_market_auto_decline_enabled(self, local_market_auto_decline_enabled):
        """Sets the local_market_auto_decline_enabled of this MotorsListingPolicy.

        Specifies whether this category supports auto-decline for Best Offers for Motors Local Market Classified Ads.  # noqa: E501

        :param local_market_auto_decline_enabled: The local_market_auto_decline_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_auto_decline_enabled = local_market_auto_decline_enabled

    @property
    def local_market_best_offer_enabled(self):
        """Gets the local_market_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates if Best Offer is enabled/required for Motors Local Market Classified Ad listings in this category.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdBestOfferEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The local_market_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._local_market_best_offer_enabled

    @local_market_best_offer_enabled.setter
    def local_market_best_offer_enabled(self, local_market_best_offer_enabled):
        """Sets the local_market_best_offer_enabled of this MotorsListingPolicy.

        Indicates if Best Offer is enabled/required for Motors Local Market Classified Ad listings in this category.  For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdBestOfferEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param local_market_best_offer_enabled: The local_market_best_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._local_market_best_offer_enabled = local_market_best_offer_enabled

    @property
    def local_market_company_name_enabled(self):
        """Gets the local_market_company_name_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports the seller's company name being specified when using Motors Local Market classified ads.  # noqa: E501

        :return: The local_market_company_name_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_company_name_enabled

    @local_market_company_name_enabled.setter
    def local_market_company_name_enabled(self, local_market_company_name_enabled):
        """Sets the local_market_company_name_enabled of this MotorsListingPolicy.

        Indicates whether the category supports the seller's company name being specified when using Motors Local Market classified ads.  # noqa: E501

        :param local_market_company_name_enabled: The local_market_company_name_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_company_name_enabled = local_market_company_name_enabled

    @property
    def local_market_contact_by_address_enabled(self):
        """Gets the local_market_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including the address in the seller's contact information.  # noqa: E501

        :return: The local_market_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_contact_by_address_enabled

    @local_market_contact_by_address_enabled.setter
    def local_market_contact_by_address_enabled(self, local_market_contact_by_address_enabled):
        """Sets the local_market_contact_by_address_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including the address in the seller's contact information.  # noqa: E501

        :param local_market_contact_by_address_enabled: The local_market_contact_by_address_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_contact_by_address_enabled = local_market_contact_by_address_enabled

    @property
    def local_market_contact_by_email_enabled(self):
        """Gets the local_market_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports including an email address in the seller's contact information.   # noqa: E501

        :return: The local_market_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_contact_by_email_enabled

    @local_market_contact_by_email_enabled.setter
    def local_market_contact_by_email_enabled(self, local_market_contact_by_email_enabled):
        """Sets the local_market_contact_by_email_enabled of this MotorsListingPolicy.

        Indicates whether the category supports including an email address in the seller's contact information.   # noqa: E501

        :param local_market_contact_by_email_enabled: The local_market_contact_by_email_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_contact_by_email_enabled = local_market_contact_by_email_enabled

    @property
    def local_market_contact_by_phone_enabled(self):
        """Gets the local_market_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether this category supports including the telephone in the seller's contact information.  # noqa: E501

        :return: The local_market_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_contact_by_phone_enabled

    @local_market_contact_by_phone_enabled.setter
    def local_market_contact_by_phone_enabled(self, local_market_contact_by_phone_enabled):
        """Sets the local_market_contact_by_phone_enabled of this MotorsListingPolicy.

        Indicates whether this category supports including the telephone in the seller's contact information.  # noqa: E501

        :param local_market_contact_by_phone_enabled: The local_market_contact_by_phone_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_contact_by_phone_enabled = local_market_contact_by_phone_enabled

    @property
    def local_market_counter_offer_enabled(self):
        """Gets the local_market_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates whether counter offers are allowed on Best Offers for this category for Motors Local Market Classified Ad listings.  # noqa: E501

        :return: The local_market_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_counter_offer_enabled

    @local_market_counter_offer_enabled.setter
    def local_market_counter_offer_enabled(self, local_market_counter_offer_enabled):
        """Sets the local_market_counter_offer_enabled of this MotorsListingPolicy.

        Indicates whether counter offers are allowed on Best Offers for this category for Motors Local Market Classified Ad listings.  # noqa: E501

        :param local_market_counter_offer_enabled: The local_market_counter_offer_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_counter_offer_enabled = local_market_counter_offer_enabled

    @property
    def local_market_non_subscription(self):
        """Gets the local_market_non_subscription of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports a seller creating a Motors Local Market listing without a subscription. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :return: The local_market_non_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_non_subscription

    @local_market_non_subscription.setter
    def local_market_non_subscription(self, local_market_non_subscription):
        """Sets the local_market_non_subscription of this MotorsListingPolicy.

        Indicates whether the category supports a seller creating a Motors Local Market listing without a subscription. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :param local_market_non_subscription: The local_market_non_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_non_subscription = local_market_non_subscription

    @property
    def local_market_payment_method_check_out_enabled(self):
        """Gets the local_market_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates if the payment method should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdPaymentMethodEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :return: The local_market_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._local_market_payment_method_check_out_enabled

    @local_market_payment_method_check_out_enabled.setter
    def local_market_payment_method_check_out_enabled(self, local_market_payment_method_check_out_enabled):
        """Sets the local_market_payment_method_check_out_enabled of this MotorsListingPolicy.

        Indicates if the payment method should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:ClassifiedAdPaymentMethodEnabledEnum'>eBay API documentation</a>  # noqa: E501

        :param local_market_payment_method_check_out_enabled: The local_market_payment_method_check_out_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._local_market_payment_method_check_out_enabled = local_market_payment_method_check_out_enabled

    @property
    def local_market_phone_count(self):
        """Gets the local_market_phone_count of this MotorsListingPolicy.  # noqa: E501

        Indicates the number of phone numbers that can be included through contact information for this category.  # noqa: E501

        :return: The local_market_phone_count of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._local_market_phone_count

    @local_market_phone_count.setter
    def local_market_phone_count(self, local_market_phone_count):
        """Sets the local_market_phone_count of this MotorsListingPolicy.

        Indicates the number of phone numbers that can be included through contact information for this category.  # noqa: E501

        :param local_market_phone_count: The local_market_phone_count of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._local_market_phone_count = local_market_phone_count

    @property
    def local_market_premium_subscription(self):
        """Gets the local_market_premium_subscription of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports the Premium level subscription Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :return: The local_market_premium_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_premium_subscription

    @local_market_premium_subscription.setter
    def local_market_premium_subscription(self, local_market_premium_subscription):
        """Sets the local_market_premium_subscription of this MotorsListingPolicy.

        Indicates whether the category supports the Premium level subscription Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :param local_market_premium_subscription: The local_market_premium_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_premium_subscription = local_market_premium_subscription

    @property
    def local_market_regular_subscription(self):
        """Gets the local_market_regular_subscription of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports the Regular level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :return: The local_market_regular_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_regular_subscription

    @local_market_regular_subscription.setter
    def local_market_regular_subscription(self, local_market_regular_subscription):
        """Sets the local_market_regular_subscription of this MotorsListingPolicy.

        Indicates whether the category supports the Regular level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :param local_market_regular_subscription: The local_market_regular_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_regular_subscription = local_market_regular_subscription

    @property
    def local_market_seller_contact_details_enabled(self):
        """Gets the local_market_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501

        Specifies the whether this category allows seller-level contact information for Motors Local Market Classified Ad listings.  # noqa: E501

        :return: The local_market_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_seller_contact_details_enabled

    @local_market_seller_contact_details_enabled.setter
    def local_market_seller_contact_details_enabled(self, local_market_seller_contact_details_enabled):
        """Sets the local_market_seller_contact_details_enabled of this MotorsListingPolicy.

        Specifies the whether this category allows seller-level contact information for Motors Local Market Classified Ad listings.  # noqa: E501

        :param local_market_seller_contact_details_enabled: The local_market_seller_contact_details_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_seller_contact_details_enabled = local_market_seller_contact_details_enabled

    @property
    def local_market_shipping_method_enabled(self):
        """Gets the local_market_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501

        Indicates if shipping methods should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled.  # noqa: E501

        :return: The local_market_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_shipping_method_enabled

    @local_market_shipping_method_enabled.setter
    def local_market_shipping_method_enabled(self, local_market_shipping_method_enabled):
        """Sets the local_market_shipping_method_enabled of this MotorsListingPolicy.

        Indicates if shipping methods should be displayed to the user for this category in an Motors Local Market Classified Ad listing. Even if enabled, checkout may or may not be enabled.  # noqa: E501

        :param local_market_shipping_method_enabled: The local_market_shipping_method_enabled of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_shipping_method_enabled = local_market_shipping_method_enabled

    @property
    def local_market_speciality_subscription(self):
        """Gets the local_market_speciality_subscription of this MotorsListingPolicy.  # noqa: E501

        Indicates whether the category supports the Speciality level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :return: The local_market_speciality_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._local_market_speciality_subscription

    @local_market_speciality_subscription.setter
    def local_market_speciality_subscription(self, local_market_speciality_subscription):
        """Sets the local_market_speciality_subscription of this MotorsListingPolicy.

        Indicates whether the category supports the Speciality level subscription to Motors Local Market listings. This feature is only available to licensed vehicle dealers.  # noqa: E501

        :param local_market_speciality_subscription: The local_market_speciality_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._local_market_speciality_subscription = local_market_speciality_subscription

    @property
    def local_market_street_count(self):
        """Gets the local_market_street_count of this MotorsListingPolicy.  # noqa: E501

        Indicates which address option is enabled for the seller's contact information.  # noqa: E501

        :return: The local_market_street_count of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._local_market_street_count

    @local_market_street_count.setter
    def local_market_street_count(self, local_market_street_count):
        """Sets the local_market_street_count of this MotorsListingPolicy.

        Indicates which address option is enabled for the seller's contact information.  # noqa: E501

        :param local_market_street_count: The local_market_street_count of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._local_market_street_count = local_market_street_count

    @property
    def max_granular_fitment_count(self):
        """Gets the max_granular_fitment_count of this MotorsListingPolicy.  # noqa: E501

        Indicates the maximum number of compatible applications allowed per item when adding or revising items with compatibilities provided at the most detailed granularity. For example, in Car and Truck Parts on the US site, the most granular application would include Year, Make, Model, Trim, and Engine.  # noqa: E501

        :return: The max_granular_fitment_count of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._max_granular_fitment_count

    @max_granular_fitment_count.setter
    def max_granular_fitment_count(self, max_granular_fitment_count):
        """Sets the max_granular_fitment_count of this MotorsListingPolicy.

        Indicates the maximum number of compatible applications allowed per item when adding or revising items with compatibilities provided at the most detailed granularity. For example, in Car and Truck Parts on the US site, the most granular application would include Year, Make, Model, Trim, and Engine.  # noqa: E501

        :param max_granular_fitment_count: The max_granular_fitment_count of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._max_granular_fitment_count = max_granular_fitment_count

    @property
    def max_item_compatibility(self):
        """Gets the max_item_compatibility of this MotorsListingPolicy.  # noqa: E501

        Indicates the maximum number of compatible applications allowed per item when adding or revising items. This is relevant for specifying parts compatibility by application manually only. See <a href=\"/api-docs/user-guides/static/trading-user-guide/manually-specify-compatibility.html\" target=\"_blank\">Specify parts compatibility manually</a> and <a href=\"/api-docs/sell/static/inventory/managing-product-compatibility.html\" target=\"_blank\">Managing product compatibility</a> for more information.  # noqa: E501

        :return: The max_item_compatibility of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._max_item_compatibility

    @max_item_compatibility.setter
    def max_item_compatibility(self, max_item_compatibility):
        """Sets the max_item_compatibility of this MotorsListingPolicy.

        Indicates the maximum number of compatible applications allowed per item when adding or revising items. This is relevant for specifying parts compatibility by application manually only. See <a href=\"/api-docs/user-guides/static/trading-user-guide/manually-specify-compatibility.html\" target=\"_blank\">Specify parts compatibility manually</a> and <a href=\"/api-docs/sell/static/inventory/managing-product-compatibility.html\" target=\"_blank\">Managing product compatibility</a> for more information.  # noqa: E501

        :param max_item_compatibility: The max_item_compatibility of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._max_item_compatibility = max_item_compatibility

    @property
    def min_item_compatibility(self):
        """Gets the min_item_compatibility of this MotorsListingPolicy.  # noqa: E501

        Indicates the minimum number of required compatible applications for listing items. A value of <code>0</code> indicates it is not mandatory to specify parts compatibilities when listing.  # noqa: E501

        :return: The min_item_compatibility of this MotorsListingPolicy.  # noqa: E501
        :rtype: int
        """
        return self._min_item_compatibility

    @min_item_compatibility.setter
    def min_item_compatibility(self, min_item_compatibility):
        """Sets the min_item_compatibility of this MotorsListingPolicy.

        Indicates the minimum number of required compatible applications for listing items. A value of <code>0</code> indicates it is not mandatory to specify parts compatibilities when listing.  # noqa: E501

        :param min_item_compatibility: The min_item_compatibility of this MotorsListingPolicy.  # noqa: E501
        :type: int
        """

        self._min_item_compatibility = min_item_compatibility

    @property
    def non_subscription(self):
        """Gets the non_subscription of this MotorsListingPolicy.  # noqa: E501

        The value in this field indicates whether the category supports Motors Local Market listings if the seller does not have a vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :return: The non_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._non_subscription

    @non_subscription.setter
    def non_subscription(self, non_subscription):
        """Sets the non_subscription of this MotorsListingPolicy.

        The value in this field indicates whether the category supports Motors Local Market listings if the seller does not have a vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :param non_subscription: The non_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._non_subscription = non_subscription

    @property
    def premium_subscription(self):
        """Gets the premium_subscription of this MotorsListingPolicy.  # noqa: E501

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Premium vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :return: The premium_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._premium_subscription

    @premium_subscription.setter
    def premium_subscription(self, premium_subscription):
        """Sets the premium_subscription of this MotorsListingPolicy.

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Premium vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :param premium_subscription: The premium_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._premium_subscription = premium_subscription

    @property
    def regular_subscription(self):
        """Gets the regular_subscription of this MotorsListingPolicy.  # noqa: E501

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Regular vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :return: The regular_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._regular_subscription

    @regular_subscription.setter
    def regular_subscription(self, regular_subscription):
        """Sets the regular_subscription of this MotorsListingPolicy.

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Regular vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :param regular_subscription: The regular_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._regular_subscription = regular_subscription

    @property
    def seller_provided_title_supported(self):
        """Gets the seller_provided_title_supported of this MotorsListingPolicy.  # noqa: E501

        This field is returned as <code>true</code> if the corresponding category supports the use of a seller-provided title for a motor vehicle listing on the US or Canada Motors marketplaces. A seller-provided title is a descriptive title, given by the seller, that appears below eBay's pre-filled listing title for the motor vehicle. Visually, the seller-provided title is similar to a subtitle on other types of eBay listings (non-vehicle). A seller-provided title can assist in helping buyers discover the vehicle.  # noqa: E501

        :return: The seller_provided_title_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._seller_provided_title_supported

    @seller_provided_title_supported.setter
    def seller_provided_title_supported(self, seller_provided_title_supported):
        """Sets the seller_provided_title_supported of this MotorsListingPolicy.

        This field is returned as <code>true</code> if the corresponding category supports the use of a seller-provided title for a motor vehicle listing on the US or Canada Motors marketplaces. A seller-provided title is a descriptive title, given by the seller, that appears below eBay's pre-filled listing title for the motor vehicle. Visually, the seller-provided title is similar to a subtitle on other types of eBay listings (non-vehicle). A seller-provided title can assist in helping buyers discover the vehicle.  # noqa: E501

        :param seller_provided_title_supported: The seller_provided_title_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._seller_provided_title_supported = seller_provided_title_supported

    @property
    def speciality_subscription(self):
        """Gets the speciality_subscription of this MotorsListingPolicy.  # noqa: E501

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Specialty vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :return: The speciality_subscription of this MotorsListingPolicy.  # noqa: E501
        :rtype: str
        """
        return self._speciality_subscription

    @speciality_subscription.setter
    def speciality_subscription(self, speciality_subscription):
        """Sets the speciality_subscription of this MotorsListingPolicy.

        The value in this field indicates whether the category supports Motors Local Market listings if the seller has a Specialty vehicle subscription. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/metadata/types/sel:GeographicExposureEnum'>eBay API documentation</a>  # noqa: E501

        :param speciality_subscription: The speciality_subscription of this MotorsListingPolicy.  # noqa: E501
        :type: str
        """

        self._speciality_subscription = speciality_subscription

    @property
    def vin_supported(self):
        """Gets the vin_supported of this MotorsListingPolicy.  # noqa: E501

        Indicates if Vehicle Identification Number is supported.  # noqa: E501

        :return: The vin_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._vin_supported

    @vin_supported.setter
    def vin_supported(self, vin_supported):
        """Sets the vin_supported of this MotorsListingPolicy.

        Indicates if Vehicle Identification Number is supported.  # noqa: E501

        :param vin_supported: The vin_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._vin_supported = vin_supported

    @property
    def vrm_supported(self):
        """Gets the vrm_supported of this MotorsListingPolicy.  # noqa: E501

        Indicates if Vehicle Registration Mark is supported.  # noqa: E501

        :return: The vrm_supported of this MotorsListingPolicy.  # noqa: E501
        :rtype: bool
        """
        return self._vrm_supported

    @vrm_supported.setter
    def vrm_supported(self, vrm_supported):
        """Sets the vrm_supported of this MotorsListingPolicy.

        Indicates if Vehicle Registration Mark is supported.  # noqa: E501

        :param vrm_supported: The vrm_supported of this MotorsListingPolicy.  # noqa: E501
        :type: bool
        """

        self._vrm_supported = vrm_supported

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MotorsListingPolicy, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MotorsListingPolicy):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
